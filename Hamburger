<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hamburger Button & Pong</title>
    <style>
        body {
            background-color: #0000AA;
            color: #FFFF00;
            font-family: "Comic Sans MS", cursive, sans-serif;
            text-align: center;
        }
        marquee {
            font-size: 20px;
            font-weight: bold;
        }
        button {
            font-size: 24px;
            padding: 15px 30px;
            cursor: pointer;
            background-color: #00FF00;
            color: #000;
            border: 3px solid #FFFF00;
            font-weight: bold;
        }
        button:hover {
            background-color: #FF0000;
        }
        canvas {
            border: 4px solid #FFFF00;
            background-color: #111;
        }
        .blink {
            animation: blinker 1s infinite;
        }
        @keyframes blinker {
            50% { opacity: 0; }
        }
        .blog {
            width: 80%;
            margin: 20px auto;
            background-color: #222;
            color: #FFFF00;
            padding: 15px;
            border: 3px dashed #FFFF00;
        }
    </style>
</head>
<body>
    <marquee>Welcome to the Ultimate 90s Gaming Website!</marquee>
    <h1 class="blink">üî• THE BEST WEBSITE EVER üî•</h1>
    <button id="hamburgerButton">üçî CLICK ME FOR BURGERS</button>
    <audio id="hamburgerSound" src="Hamburger.m4a"></audio>
    <canvas id="pongCanvas" width="600" height="400"></canvas>
    <br>
    <marquee behavior="alternate">Pong Game Below! Play Now!</marquee>
    
    <div class="blog">
        <h2>üïπÔ∏è A Brief History of Gaming üïπÔ∏è</h2>
        <p>Once upon a time in the 90s, gaming was all about pixels, cartridges, and legendary arcade battles. 
        From classic consoles like the SNES and Sega Genesis to coin-operated machines in your favorite pizza 
        joint, gaming was a whole different world.</p>
        <p>Who could forget the thrill of beating your best friend's high score in Pac-Man or finally rescuing 
        the princess in Mario? The 90s were the golden age of video games, and now you can relive that era right here!</p>
        <p>Enjoy our Pong mini-game and remember: <strong>Keep it retro! üéÆ</strong></p>
    </div>
    
    <script>
        document.getElementById("hamburgerButton").addEventListener("click", function() {
            document.getElementById("hamburgerSound").play();
            alert("HAMMMMBURGER! YUMMY!");
        });

        const canvas = document.getElementById("pongCanvas");
        const ctx = canvas.getContext("2d");

        const paddleHeight = 80, paddleWidth = 10;
        let paddleY = (canvas.height - paddleHeight) / 2;
        let ballX = canvas.width / 2, ballY = canvas.height / 2;
        let ballSpeedX = 4, ballSpeedY = 4;

        function drawRect(x, y, width, height, color) {
            ctx.fillStyle = color;
            ctx.fillRect(x, y, width, height);
        }

        function drawBall(x, y, radius, color) {
            ctx.fillStyle = color;
            ctx.beginPath();
            ctx.arc(x, y, radius, 0, Math.PI * 2, true);
            ctx.fill();
        }

        function update() {
            ballX += ballSpeedX;
            ballY += ballSpeedY;

            if (ballY <= 0 || ballY >= canvas.height) {
                ballSpeedY = -ballSpeedY;
            }

            if (ballX <= paddleWidth && ballY > paddleY && ballY < paddleY + paddleHeight) {
                ballSpeedX = -ballSpeedX;
            }

            if (ballX >= canvas.width) {
                ballX = canvas.width / 2;
                ballY = canvas.height / 2;
                ballSpeedX = -ballSpeedX;
            }
        }

        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawRect(0, paddleY, paddleWidth, paddleHeight, "#FFFF00");
            drawBall(ballX, ballY, 10, "#FF0000");
        }

        function gameLoop() {
            update();
            draw();
            requestAnimationFrame(gameLoop);
        }

        document.addEventListener("mousemove", function(event) {
            let rect = canvas.getBoundingClientRect();
            let root = document.documentElement;
            let mouseY = event.clientY - rect.top - root.scrollTop;
            paddleY = mouseY - (paddleHeight / 2);
        });

        gameLoop();
    </script>
</body>
</html>
